% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggiraph.R
\name{ggiraph}
\alias{ggiraph}
\title{ggiraph}
\usage{
ggiraph(code, ggobj = NULL, pointsize = 12, width = 0.7, width_svg = 6,
  height_svg = 6, tooltip_extra_css, hover_css, tooltip_opacity = 0.9,
  tooltip_offx = 10, tooltip_offy = 0, zoom_max = 1,
  selection_type = "multiple", selected_css, flexdashboard = FALSE, ...)
}
\arguments{
\item{code}{Plotting code to execute}

\item{ggobj}{ggplot objet to print. argument \code{code} will
be ignored if this argument is supplied.}

\item{pointsize}{the default pointsize of plotted text in pixels, default to 12.}

\item{width}{widget width ratio (0 < width <= 1)}

\item{width_svg, height_svg}{svg viewbox width and height in inches}

\item{tooltip_extra_css}{extra css (added to \code{position: absolute;pointer-events: none;})
used to customize tooltip area.}

\item{hover_css}{css to apply when mouse is hover and element with a data-id attribute.}

\item{tooltip_opacity}{tooltip opacity}

\item{tooltip_offx}{tooltip x offset}

\item{tooltip_offy}{tooltip y offset}

\item{zoom_max}{maximum zoom factor}

\item{selection_type}{row selection mode ("single", "multiple", "none")
when widget is in a Shiny application.}

\item{selected_css}{css to apply when element is selected (shiny only).}

\item{flexdashboard}{should be TRUE when used within a flexdashboard to
ensure svg will fit in boxes.}

\item{...}{arguments passed on to \code{\link[rvg]{dsvg}}}
}
\description{
Create an interactive graphic to be used in a web browser.

Use \code{geom_zzz_interactive} to create interactive graphical elements.

Difference from original functions is that the following
aesthetics are understood: \code{tooltip}, \code{onclick}
and \code{data_id}.

Tooltips can be displayed when mouse is over graphical elements. On click
actions can be set with javascript instructions. If id are associated with points,
they get animated when mouse is over and can be selected when used in shiny apps.
}
\examples{
# ggiraph simple example -------
# create dataset
dataset = iris
dataset$tooltip = dataset$Species
dataset$clickjs = paste0("alert(\\"",dataset$Species, "\\")" )

# plots
gg_point = ggplot(dataset, aes(x = Sepal.Length, y = Petal.Width,
		color = Species, tooltip = tooltip, onclick = clickjs) ) +
	geom_point_interactive()

ggiraph(code = {print(gg_point)})
}
